// @flow
/**
 * Flowtype definitions for Name
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.12.1
 */

import { Namespace } from "../Namespace";
import { Name } from "../interface";
import type { Random } from "../random";
import type { Universe, DataByUniverse } from "../interface";
declare type NamesByUniverse = { [key: Universe]: Name[], ... };
declare export class Names mixins Namespace {
  data: NamesByUniverse;
  constructor(data: DataByUniverse, random: Random): this;
  getNamesSubset(ctx: null | Universe | Universe[]): Name[];
  first(ctx?: Universe | Universe[]): string;
  last(ctx?: Universe | Universe[]): string;
  full(ctx?: Universe | Universe[]): string;
}
declare export {};
