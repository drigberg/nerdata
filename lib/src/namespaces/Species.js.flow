// @flow
/**
 * Flowtype definitions for Species
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.12.1
 */

import { Namespace } from "../Namespace";
import { Species as ISpecies } from "../interface";
import type { Random } from "../random";
import type { Universe, DataOrNullByUniverse } from "../interface";
declare type SpeciesByUniverse = { [key: Universe]: ISpecies[], ... };
declare export class Species mixins Namespace {
  data: SpeciesByUniverse;
  constructor(data: DataOrNullByUniverse, random: Random): this;
  getByType(ctx: null | Universe | Universe[], type: string | null): ISpecies;
  sentient(ctx?: Universe | Universe[]): string;
  nonsentient(ctx?: Universe | Universe[]): string;
  any(ctx?: Universe | Universe[]): string;
}
declare export {};
